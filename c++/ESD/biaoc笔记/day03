1 c语言官方提供了一组工具，这写工具叫标准函数
1
1 每个标准函数可以解决一个常见的问题 
1
1 每个标准函数都有自己的名字 
1
1 可以随时在程序中使用某个标准函数（编写函数调用语句使用标准函数）
1
1 printf函数是一个标准函数，他用来把数字打印在终端窗口里 
1
1 为了使用这个标准函数需要包含stdio.h文件
1
1 可以在双隐号中间使用占位符。替双引号后面的数字站位子  （abcde, a%dbcde	）
1
1 在双引号里可以有多个占位符，有多少占位符就需要在双引号后面写多少个数字，数字按照从前到后的顺序依次替换所有占位符
1
1 不同类型的数字应该使用不同的占位符，%d占位符用来和整数类型数字配合使用
1 
1  
1 计算机内存是用来记录数字的，任何程序所使用的数字一定被放在内存里 
1
1 计算机内存有大量的座位构成，每个座位可以用来记录一个数字
1 我们把这写座位叫做一个字节
1
1 每个字节有一个自己的编号，这个编号叫做这个字节的地址
1
1 所有字节的地址从0开始向上依次递增
1
1 内存中也可能把几个相邻字节合并用来记录一个数字
1
1 内存中用来记录一个数字的所有字节统称为一个存储区
1
1 存储区的地址是他所包含的字节中地址最小字节的地址   （5，6，7，8  存储区地址是5）
1
1 一个存储区只能记录一种类型的数字
1
1 
1 程序中使用变量代表存储区，对变量的操作就是对他所代表的存储区的操作        ***
1
1 在程序中必须首先使用变量声明语句声明变量，然后才可以使用他
1 
1 变量声明语句中必须包含变量名称，不同变量的名称不同                          #include<stdio.h>
1                                                                          int main () { 
1 变量声明语句中必须包含类型名称，这个类型名称决定变量对应的存储区             int num,num1;      变量声明语句       
  可以记录什么类型的数字                                                     num = 10,num1 = 8;  赋值运算
1                                                                           printf (“”)；
1 变量声明语句会在计算机内存中分配一个存储区，以后才可以使用这个存储区          return 0；    
1                                                                           }   
1 变量优有两种使用方式
1 
1 1.可以通过变量向变量代表的存储区里放一个数字
1 2.可以从变量代表的存储区里获得一个数字
1
1 使用赋值语句可以向变量代表的存储区里放数字
1
1 赋值语句的核心是赋值操作符（=）
1
1 值操作符要求左边是一个可以代表存储区的内容（左值）
1 值操作符要求右边是一个可以表数字的内容
1 赋值操作符可以把右边的数字放在左边的存储区里
1
1 程序中直接把存储区当作数字使用就可以从存储区里得到数字                   ***
1
1 变量名称既可以代表存储区也可以代表数字                                   ***
1
1 程序中某个变量名称的作用需要根据他所在的环境确定
1
1 可以在一条语句中声明多个类型名称变量
1
1 可以在声明变量的时候立刻进行赋值，这叫做变量初始化                    (int num = 10,num1 = 8;)
1
1 没有赋值的变量里也是有数字的，这个数字的数值不确定，为了避免这种数字影响程序的执行，所有的变量都应该初始化
1
1
1 变量可以用来代表一个固定不变的未知数字
1
1 可以用一个变量来代表一组相关数字（不可以同时使用多个数字）
1
1 当程序中对变量内存做修改的时候往往不知道修改结果，通常需要把计算结果计算出来在放到变量中    ***
1
1
1
1 scanf标准函数可以用来把用户在键盘上输入的数字记录在变量的存储区里
1
1 为了使用这个标准函数需要包含stdio.h文件
1
1 在scanf函数调用语句中必须使用存储区地址表示存储区
1                                                                  vi100.c
1 需要在小括号里使用占位符表示存储区的类型
1
1 在scanf函数调用语句中不要使用\n字符
1
1 可以在一条scanf函数调用语句中获得多个数字
1
1 可以在双引号里使用不是占位符的内容，用户必须把这写内容按顺序输入
1
1 使用scanf获得数据的时候只要某个地方的输入和要求的格式不一致则后面输入的所有内容都无法处理
1
1 这种情况下应该把用户输入的所有内容都丢弃，让用户重新输入                                    ****
1
1     scanf (“%*[^\n]”) ;
      scanf ("%*c");                                                    ****



 #include<stdio.h>
 int main () {
     int num = 0,num1 = 0;
     printf ("请输入两个数字")；
     scanf ("%d%d",&num,&num1);
     printf ("num是%d\n",num);          printf ("num是%d\ntem是%d\n",num,tem);
     printf ("num1是%d\n",num1);       
     return 0;
     } 

     
     
1
1
1 字符类型是一种数据类型
1 字符类型的名称是char
1
1 这个类型中包含了256个不同的字符数据（例如‘+’，‘$’等）
1 
1 所有字符数据都是以整数的形式记录在计算机里
1
1 
1 ASCII码表中记录了所有字符数据和整数数字之间的对应关系
1     ‘a’     97
1     'A'     65
1     '0'     48
1
1
1 所有字符类型被分成两组，每组中包含128个字符 
1 
1 其中一组字符所对应的整数数字在所有计算机上都一样（这组整数的范围从0到127）
1
1 另外一组对应的整数在不同的计算机上有可能不同（这写整数的范围可能从-128到-1，也可能从128到255）
1 
1 
1 无符号字符类型也是一种数据类型
1 无符号数据类型的名称是unsigned char
1
1 这个类型里同样包含了256个不同的字符数据
1
1 这个类型中的所有字符数据所对应的整数在所有计算机上都是固定从0到255 
1
1 在ASCII码表里所有小写英文字母是连续排列的 ，‘a’对应的整数最小，‘z’对应的整数最大
1
1 所有大写英文字符也符合这个规律
1
1 所有阿拉伯数字字符也符合这个规律
1
1 ‘d’ - 'a'   等于   'D' - 'A'                                                    *****
1
1 ‘3’ - ‘0’   等于    3  -  0                                                     *****
1
1 ‘3’ - ‘0’   等于    ‘d’ - 'a'                                                   *****
1
1
1 
1     '\n'         换行
1     '\r'         回车（后面的字符处现在本行最左边）  
1     '\t'         制表符（后面的字符处现在下一段的开头）                                *******
1     '\\' ,'\''和'''分别用来表示字符\，字符'和字符"
1
1
1
1   预习
1      1.其他数据类型
1      2.不同数据类型的占位符
1      3.sizeof关键字
1      4.二进制
1
1   作业
1      1.编写程序计算用户给定数字的相反数（两个整数和为0）
1      2.编写程序计算长方形的面积（长方形的长和宽由用户在键盘输入）
1      3.显示相反 
1   1.  #include<stdio.h>                           1.
        int main () {
            int num,tem;                              int num = 0;
            printf ("请输入一个数字")；                 
            scanf ("%d", &num);
            tem = o - num;                             
            printf ("%d\n",tem);                      printf("%d\n",0 - num);
             return 0;
             }   
    2. #include<stdio.h>                             2.
       int main () {
         int num,tem,pem;                              int num = 0,tem = 0;
         printf ("请输入长方形的长和宽")；
         scanf ("%d%d", &num, &tem);
         pem = num * tem;                              num * tem
         printf ("%d\n",pem);                          printf ("%d\n",num * tem);
         return 0;
         }     

    3.#include<stdio.h>
      int main () {
          int num = 3,num1 = 7;
          int tem = 0;
          num = tem,num1 = num, tem = num1;            tem = num,num = num1,num1 = tem;
          printf ("num = 7,num1 = 3\,");
          return 0;
           } 





   

