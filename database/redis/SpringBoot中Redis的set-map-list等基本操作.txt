https://yq.aliyun.com/wenji/275519


今天给大家介绍一下SpringBoot中Redis的set、map、list、value等基本操作的具体使用方法 

1.存储set值的案例介绍：
	
	Set<String>set1=new HashSet<String>();
	set1.add("set1");
	set1.add("set2");
	set1.add("set3");
	redisTemplate.opsForSet().add("set1",set1);
	Set<String> resultSet =redisTemplate.opsForSet().members("set1");
	System.out.println("resultSet:"+resultSet);
	
2.存储map值的案例介绍： 

	2.1

		Map<String,String> map=new HashMap<String,String>();
		map.put("key1","value1");
		map.put("key2","value2");
		map.put("key3","value3");
		map.put("key4","value4");
		map.put("key5","value5");
		redisTemplate.opsForHash().putAll("map1",map);
		Map<String,String> resultMap= redisTemplate.opsForHash().entries("map1");
		List<String>reslutMapList=redisTemplate.opsForHash().values("map1");
		Set<String>resultMapSet=redisTemplate.opsForHash().keys("map1");
		String value=(String)redisTemplate.opsForHash().get("map1","key1");
		System.out.println("value:"+value);
		System.out.println("resultMapSet:"+resultMapSet);
		System.out.println("resultMap:"+resultMap);
		System.out.println("resulreslutMapListtMap:"+reslutMapList);
	
	2.2
	
		//设置
        Map m1 = new HashMap();
        for(int i=0; i<10;i++){
            m1.put("key"+i,i);
        }
        HashOperations hashOperations = redisTemplate.opsForHash();
        hashOperations.putAll("zcymap",m1);
        //查询
        Map m2 = hashOperations.entries("zcymap");
        HashOperations hashOperations2 = redisTemplate.opsForHash();
        return hashOperations2.entries("zcymapobject");  //value
		
		
		List<String>reslutMapList=redisTemplate.opsForHash().values("map1");   	//map 里面 value 值获取
		Set<String>resultMapSet=redisTemplate.opsForHash().keys("map1"); 		//map 里面 key 值获取
	
	
3.存储list值的案例介绍： 


	List<String> list1=new ArrayList<String>();
	list1.add("a1");
	list1.add("a2");
	list1.add("a3");

	List<String> list2=new ArrayList<String>();
	list2.add("b1");
	list2.add("b2");
	list2.add("b3");
	redisTemplate.opsForList().leftPush("listkey1",list1);
	redisTemplate.opsForList().rightPush("listkey2",list2);
	
	List list = jdkRedisTemplate.opsForList().range("listkey1", 0, -1);
    List<String> listStr = new ArrayList<>(list);
    System.out.println(listStr);
	
	//以下 leftPop rightPop 方法会将数据从 redis 擦除
	List<String> resultList1=(List<String>)redisTemplate.opsForList().leftPop("listkey1");
	List<String> resultList2=(List<String>)redisTemplate.opsForList().rightPop("listkey2");
	System.out.println("resultList1:"+resultList1);
	System.out.println("resultList2:"+resultList2);