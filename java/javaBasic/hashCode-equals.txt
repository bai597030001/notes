1 equals() 的作用是什么？

	定义在JDK的Object.java中。通过判断两个对象的地址是否相等(即，是否是同一个对象)来区分它们是否相等.
	
	源码如下：

		public boolean equals(Object obj) {
			return (this == obj);
		}

	既然Object.java中定义了equals()方法，这就意味着所有的Java类都实现了equals()方法，
	
	所有的类都可以通过equals()去比较两个对象是否相等.
	
	使用默认的 “ equals()”方法，等价于“==”方法。因此，我们通常会重写 equals()方法：
	
	若两个对象的内容相等，则equals()方法返回true；否则，返回fasle。
	
	
	java对equals()的要求。有以下几点： 
	
		1. 对称性：如果x.equals(y)返回是"true"，那么y.equals(x)也应该返回是"true"。
		2. 反射性：x.equals(x)必须返回是"true"。
		3. 类推性：如果x.equals(y)返回是"true"，而且y.equals(z)返回是"true"，那么z.equals(x)也应该返回是"true"。
		4. 一致性：如果x.equals(y)返回是"true"，只要x和y内容一直不变，不管你重复x.equals(y)多少次，返回都是"true"。
		5. 非空性，x.equals(null)，永远返回是"false"；x.equals(和x不同类型的对象)永远返回是"false"。
				
2 equals() 与 == 的区别是什么？

	== : 它的作用是判断两个对象的地址是不是相等。即，判断两个对象是不试同一个对象。
	
	equals() : 它的作用也是判断两个对象是否相等。但它一般有两种使用情况(类是否复写 equals() 方法)

3 hashCode() 的作用是什么？

	作用是获取哈希码，也称为散列码.它实际上是返回一个int整数。这个哈希码的作用是确定该对象在哈希表中的索引位置
	
	3.1、如果两个对象相等，那么它们的hashCode()值一定要相同；
    
	3.2、如果两个对象hashCode()相等，它们并不一定相等。

4 hashCode() 和 equals() 之间有什么联系？

	4.1 如果不会创建“类对应的散列表”，那么该类的 hashCode() 和 equals() 没有什么关系
	
	4.2 如果会创建“类对应的散列表”，那么必须重写该类的 hashCode() 和 equals() 方法;
		散列表会根据 hashCode() 方法来计算哈希码, 用 equals() 来比较对象是否相等。