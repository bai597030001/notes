Function、Predicate、Consumer、Supplier接口

https://www.jianshu.com/p/5b35158a0365

这些接口都有一个@FunctionalInterface注解，表明这个接口将是一个函数式接口，里面只能有一个抽象方法Function

	Function<T, R> => R apply(T t);
	接受一个输入参数，返回一个结果

		Function<Integer, String> function1 = (x) -> "result: " + x;
		function1.apply(6);

	Predicate
	Predicate<T> => boolean test(T t);
	接受一个输入参数，返回布尔值

		Predicate<String> predicate = (x) -> x.length() > 0;
		predicate.test("String");
	
	Consumer
	Consumer<T> => void accept(T t);
	接受一个输入参数，无返回值

		Consumer<String> consumer = (x) -> System.out.println("consumer: " + x);
		consumer.accept("Hello");
	
	Supplier
	Supplier<T> => T get();
	无输入参数，返回一个结果
		
		Supplier<String> supplier = () -> "Test supplier";
		supplier.get();