Java Date类的使用总结

	Date类表示特定的瞬间，精确到毫秒。
	
	有2种方法可以创建Date对象
	
		1、public Date()――分配 Date 对象并初始化此对象，以表示分配它的时间（精确到毫秒）。
		
			public void test1() {
				Date date = new Date();
				System.out.println(date);
			}
			 
		2、public Date(long date)――根据给定的毫秒值创建日期对象。
		
			public void test2() {
				long time = System.currentTimeMillis();
				Date date = new Date(time);
				System.out.println(date);
			 }
			 
			 
	日期与毫秒值的相互转换
	
		1、public long getTime()――日期转毫秒值
		
			public void test3() {
				Date date = new Date();
				System.out.println(date.getTime());
			}
			
		2、public void setTime(long time)――毫秒值转日期
		
			@Test
			public void test4() {
				long time = System.currentTimeMillis();
				Date date = new Date();
				date.setTime(time);
				System.out.println(date);
			}
			
	比较2个日期的大小
	
		1、public boolean before(Date when)――测试此日期是否在指定日期之前，
		
			当且仅当此Date对象表示的瞬间比when表示的瞬间早，才返回true；否则返回false。
			
		2、public boolean after(Date when)――测试此日期是否在指定日期之后，
			
			当且仅当此Date对象表示的瞬间比when表示的瞬间晚，才返回true；否则返回false。
			
		3、public int compareTo(Date anotherDate)――比较两个日期的顺序。

			如果参数Date等于此Date，则返回值0；

			如果此Date在Date参数之前，则返回小于0的值；
			
			如果此Date在Date参数之后，则返回大于0的值。