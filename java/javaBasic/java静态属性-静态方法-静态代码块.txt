
静态变量

	静态变量理解为类变量（与对象无关），而实例变量则属于一个特定的对象。
	
	静态变量有两种情况：
	
		基本数据类型: 这种情况下在类的外部不必创建该类的实例就可以直接使用
		
		引用: 这种情况比较特殊，主要问题是由于静态变量是一个对象的引用，那么必须初始化这个对象之后才能将引用指向它。
		
			因此如果要把一个引用定义成static的，就必须在定义的时候就对其对象进行初始化。
			
静态方法:

	与类变量不同，方法（静态方法与实例方法）在内存中只有一份，无论该类有多少个实例，都共用一个方法。
	
	静态方法只允许访问静态成员。而实例方法中可以访问静态成员和实例成员。

	静态方法中不能使用this（因为this是与实例相关的）。
	
静态代码块:

	static {  
	//静态代码块中的语句  
	}  
	
	静态代码块主要用于类的初始化。它只执行一次，并且在同属于一个类的main函数之前执行。
	
		
		静态代码块会在类被加载时自动执行。
		
		静态代码块只能定义在类里面，不能定义在方法里面。
		
		静态代码块里的变量都是局部变量，只在块内有效。
		
		一个类中可以定义多个静态代码块，按顺序执行。
		
		静态代码块只能访问类的静态成员，而不允许访问实例成员。