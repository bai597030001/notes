一、UDP通信协议的基本特征
1.面向无连接：无需事先建立连接，数据报本身携带对方的目的
地址。
2.缺乏可靠性：成功不确认，丢包不重传。
3.不保证顺序：接收到的数据包顺序可能和发送的顺序不一致，
也可能重复。
4.无流量控制：快发慢收，可能引起大量的数据丢失。
5.传输速度快。
二、基于UDP协议的编程模型
服务器                                客户机
创建套接字(socket)           创建套接字(socket)
准备地址(sockaddr_in)     准备地址(sockaddr_in)
绑定套接字(bind)
接收请求(recvfrom)          发送请求(sendto)
发送响应(sendto)              接收响应(recvfrom)
关闭套接字(close)              关闭套接字(close)
三、线程的基本概念
1.线程就是进程中指令代码的执行路径。
2.每个进程至少应该有一个主线程，表现为main函数。
3.在进程的主线程中还可以创建更多的线程，成为子线程。
4.一个进程中的每个线程只有栈和寄存器是独立的，其它的内存
资源都是共享的。
5.同一个进程中的多个线程都在同一个地址空间活动，彼此之间
的数据交换不需要特殊的通信机制，但是需要通过必要的同步手
段避免并发冲突。
6.线程的创建开销小于进程，线程亦称轻量级进程。
7.所谓多任务操作系统的任务切换，其基本切换单位就是线程。
四、线程库
POSIX线程
#include <pthread.h>
gcc ... -lpthread
1.线程管理：创建、销毁、分离、汇合、属性。
2.线程同步：互斥量、条件变量、信号量。
五、线程管理函数
1.创建线程
int pthread_create (
  pthread_t* tid, // 线程ID(Linux: unsigned long)
  const pthread_attr_t* attr, // 线程属性，NULL表示缺省
  void* (*start_routine) (void*), // 线程过程函数指针
  void* arg); // 传递给线程过程函数的参数
成功返回0，失败返回错误码。












