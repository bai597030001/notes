redis api说明：
	
	1.redis官方提供
	
		redis官方提供了一系列的 clients 供外部使用(c++/python/java/scala等)
		
		详情可见 redis官网中 clients -> java -> Jedis/JRedis......
		
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.4.2</version>
		</dependency>

		
			common-pool2连接池详解与使用
			
				https://blog.csdn.net/u011277123/article/details/53943351/
				
				我们在服务器开发的过程中，往往会有一些对象，它的创建和初始化需要的时间比较长，
				比如数据库连接，网络IO，大数据对象等。在大量使用这些对象时，如果不采用一些
				技术优化，就会造成一些不可忽略的性能影响。一种办法就是使用对象池，每次创建的
				对象并不实际销毁，而是缓存在对象池中，下次使用的时候，不用再重新创建，直接从
				对象池的缓存中取即可。为了避免重新造轮子，我们可以使用优秀的开源对象池化组件
				apache-common-pool2，它对对象池化操作进行了很好的封装，我们只需要根据自己的业
				务需求重写或实现部分接口即可，使用它可以快速的创建一个方便，简单，强大对象连接池管理类。
				
				<dependency>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-pool2</artifactId>
					<version>2.4.2</version>
				</dependency>
		
			common-pool2的应用

				使用common-pool2的对象池技术的一个完美例子就是redis的Java客户端JedisPool。
				大家可以下载Jedis的包，查看源码进行学习。
		
	2.spring封装 redis api
	
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
			<version>1.0.2.RELEASE</version>
		</dependency>
		
	3.springboot 在 spring api 的基础上进行二次封装
	
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <version>RELEASE</version>
        </dependency>
		
		
		https://blog.csdn.net/liqingtx/article/details/60330555
		
		https://www.cnblogs.com/guanzhyan/p/8367585.html
		
		https://blog.csdn.net/ityqing/article/details/79471275
		
